create basic structure:
  ✔ `main.rs` with some tests that runs @done(23-08-17 20:00)
  ✔ figure out simple UX / DX for how to use this API @done(23-08-19 12:31)
  ✔ create color types: @done(23-08-19 12:31)
    ✔ RgbColor @done(23-08-19 12:31)
    ✔ ANSI256 @done(23-08-19 12:31)

convert colors to ANSI256:
  ✔ convert rgb to ansi 256 color @done(23-08-19 12:31)
  ✔ convert ansi 256 color to rgb @done(23-08-19 12:31)

testing:
  ✔ add color support override for testing @done(23-08-19 20:00)

output colors to stdout:
  ☐ output ANSI escape codes to stdout
  ☐ test on macOS & linux

support styles:
  ☐ instead of fg, bg color, add a style enum (w/ bold, italic, underline, etc)
  ☐ add a fmt_str! macro that supports styles (attributes and colors)
  ☐ change `FormattedString` to support `vec![style]`

dx review:
  ✔ make sure that all the functions and symbols are consistent and written in active tense @done(23-08-19 12:45)
  ☐ `let eg_1 = fmt_str!( txt: "hi, {foo} there", fg: rgb(0,0,0), bg: rgb(255,255,255) )`?
  ☐ provide some good default colors

docs:
  ☐ write docs.rs documentation
  ☐ write README.md (add images for the following, which are in the github repo)
    ☐ Code examples describing how to create colors: default, RGB, ANSI256
    ☐ Code examples describing how to output colors to stdout

publish:
  ☐ Apache 2.0 license
  ☐ Add copyrights to each file
  ☐ crates.io